<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.yjh.lecture.dao.L_memberDAO">
	
	<!-- 회원정보 DB에 저장 -->
	<insert id="insert" parameterType="L_memberVO">
		insert into L_MEMBER
		values
		(L_MEMBER_M_NO_SEQ.nextval, #{ID}, #{PASSWORD}, #{NAME}, #{NICKNAME}, #{BIRTH}, #{PHONE}, #{ZIPCODE}, #{ADDR1}, #{ADDR2}, #{GENDER}, 0,  SYSDATE)	
	</insert>	
	
	<!--  회원 아이디로 전체읽기 (로그인, 인증, 비밀번호찾기) -->
	<select id="selectByID" parameterType="java.util.HashMap" resultType="L_memberVO">
		select * from L_MEMBER where ID=#{ID}
	</select>
	
	<!--  USE값 변경  -->
	<update id="updateUse" parameterType="java.util.HashMap">
		update L_MEMBER set
		USE=#{USE} where ID=#{ID}
	</update>
	
	<!-- 아이디찾기 - 전화번호와 이름으로 찾기 -->
	<select id="userIDSearch" parameterType="java.util.HashMap" resultType="L_memberVO">
		select * from L_MEMBER where NAME=#{NAME} and PHONE=#{PHONE}		
	</select>
	
	<!-- 비밀번호 변경 - 임시비번, 내정보에서 바꾸기  -->
	<update id="updatePassword" parameterType="L_memberVO">
		update L_MEMBER set PASSWORD=#{PASSWORD} where ID=#{ID}
	</update>
		
	<!-- 회원 아이디 중복체크 (DB에 있는 ID 개수를 세준다.)-->	
	<select id="countMember" parameterType="String" resultType="int">
		select count(*) from  L_MEMBER where ID=#{ID}
	</select>
	<!-- 회원 닉네임 중복체크 (DB에 있는 NICKNAME 개수를 세준다.)-->	
	<select id="countNickname" parameterType="String" resultType="int">
		select count(*) from  L_MEMBER where NICKNAME=#{NICKNAME}
	</select>
	<!-- 회원 닉네임 중복체크 (DB에 있는 PHONE 개수를 세준다.)-->	
	<select id="countPhone" parameterType="String" resultType="int">
		select count(*) from  L_MEMBER where PHONE=#{PHONE}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="updateMember" parameterType="L_memberVO">
		update L_MEMBER 
		set 
			NICKNAME=#{NICKNAME},
			PHONE=#{PHONE},
			ZIPCODE=#{ZIPCODE},
			BIRTH=#{BIRTH},
			ADDR1=#{ADDR1},
			ADDR2=#{ADDR2}
		where 
			ID=#{ID}
	</update>	
		
	<!-- 회원 탈퇴 -->
	<delete id='deleteMember' parameterType="L_memberVO">
		 delete from L_MEMBER where ID=#{ID} and PASSWORD=#{PASSWORD}
	</delete>	
		
		
		
</mapper>